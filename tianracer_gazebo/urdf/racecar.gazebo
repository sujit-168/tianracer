<?xml version="1.0"?>
<robot name="tianracer" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Gazebo references -->

  <gazebo reference="${tf_prefix}base_link">
    <mu1 value="0.0" />
    <mu2 value="0.0" />
    <kp value="10000000.0" />
    <kd value="1.0" />
    <material>Gazebo/DarkGray</material>
  </gazebo>

  <gazebo reference="${tf_prefix}left_rear_wheel">
    <mu1 value="2.0" />
    <mu2 value="2.0" />
    <kp value="10000000.0" />
    <kd value="1.0" />
    <fdir1 value="1 0 0" />
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="${tf_prefix}right_rear_wheel">
    <mu1 value="2.0" />
    <mu2 value="2.0" />
    <kp value="10000000.0" />
    <kd value="1.0" />
    <fdir1 value="1 0 0" />
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="${tf_prefix}left_front_wheel">
    <mu1 value="2.0" />
    <mu2 value="2.0" />
    <kp value="10000000.0" />
    <kd value="1.0" />
    <fdir1 value="0 0 1" />
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="${tf_prefix}right_front_wheel">
    <mu1 value="2.0" />
    <mu2 value="2.0" />
    <kp value="10000000.0" />
    <kd value="1.0" />
    <fdir1 value="0 0 1" />
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="${tf_prefix}laser">
    <material>Gazebo/Gray</material>
  </gazebo>

  <gazebo reference="${tf_prefix}camera">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="${tf_prefix}real_sense">
    <material>Gazebo/LightGray</material>
  </gazebo>


  <!-- Gazebo Plugins -->
  <gazebo>
    <plugin name="gazebo_ros_ackermann_drive" filename="libgazebo_ros_ackermann_drive.so">
    <!-- <plugin name="gazebo_ros_ackermann_drive" filename="$(find tianracer_gazebo)/plugins/libgazebo_ros_ackermann_drive.so"> -->

      <ros>
        <namespace>demo</namespace>
        <remapping>cmd_vel:=cmd_demo</remapping>
        <remapping>odom:=odom_demo</remapping>
        <remapping>distance:=distance_demo</remapping>
        <remapping>steerangle:=steerangle_demo</remapping>
      </ros>

      <update_rate>100.0</update_rate>
      <robotNamespace>${tf_prefix}</robotNamespace>
      <gaussianNoise>0.0</gaussianNoise>

      <!-- wheels -->
      <front_left_joint>left_front_wheel_joint</front_left_joint>
      <front_right_joint>right_front_wheel_joint</front_right_joint>
      <rear_left_joint>left_rear_wheel_joint</rear_left_joint>
      <rear_right_joint>right_rear_wheel_joint</rear_right_joint>
      <left_steering_joint>left_steering_hinge_joint</left_steering_joint>
      <right_steering_joint>right_steering_hinge_joint</right_steering_joint>
      <steering_left_wheel_joint>left_steering_hinge_joint</steering_left_wheel_joint>
      <steering_right_wheel_joint>right_steering_hinge_joint</steering_right_wheel_joint>

      <!-- Max absolute steer angle for tyre in radians-->
      <!-- Any cmd_vel angular z greater than this would be capped -->
      <max_steer>0.6458</max_steer>

      <!-- Max absolute steering angle of steering wheel -->
      <max_steering_angle>7.85</max_steering_angle>

      <!-- Max absolute linear speed in m/s -->
      <max_speed>20</max_speed>

      <!-- PID tuning -->
      <left_steering_pid_gain>15 0 1</left_steering_pid_gain>
      <left_steering_i_range>0 0</left_steering_i_range>
      <right_steering_pid_gain>15 0 1</right_steering_pid_gain>
      <right_steering_i_range>0 0</right_steering_i_range>
      <linear_velocity_pid_gain>10 0 0</linear_velocity_pid_gain>
      <linear_velocity_i_range>0 0</linear_velocity_i_range>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <!-- <publish_wheel_tf>true</publish_wheel_tf> -->
      <publish_distance>true</publish_distance>
      <publish_steerangle>true</publish_steerangle>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>
  </gazebo>

  <!-- hokuyo -->

  <gazebo reference="${tf_prefix}laser">
    <sensor type="ray" name="hokuyo_sensor">
      <pose>0 0 0.0124 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>-2.3561944902</min_angle>
            <max_angle>2.3561944902</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/${tf_prefix}scan</topicName>
        <frameName>/${tf_prefix}laser</frameName>
      </plugin>
    </sensor>
  </gazebo>


  <!-- camera -->
  <gazebo reference="${tf_prefix}camera_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>usb_cam</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>/${tf_prefix}camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="${tf_prefix}real_sense">
    <sensor type="depth" name="real_sense">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <camera>
        <horizontal_fov>${60.0*3.14/180.0}</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin name="kinect_real_sense_controller" filename="libgazebo_ros_openni_kinect.so">
        <cameraName>real_sense</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>10</updateRate>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <frameName>realsense_depth</frameName>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.4</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="${tf_prefix}imu_link">
    <material>Gazebo/Orange</material>
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>/${tf_prefix}imu_link</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>/${tf_prefix}imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

</robot>